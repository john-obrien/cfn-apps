{
	"AWSTemplateFormatVersion": "2010-09-09",
	
	"Description" : "Simple PPTP VPN Server",
	
	"Parameters" : {
		"KeyName" : {
			"Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
			"Type" : "String",
			"MinLength": "1",
			"MaxLength": "64",
   			"Default" : "ec2-keypair",
			"AllowedPattern" : "[-_ a-zA-Z0-9]*",
			"ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
		},
  		
		"VPNUsername": {
			"Description" : "Username VPN access",
			"Type": "String",
			"MinLength": "1",
			"MaxLength": "16",
			"AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
			"ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
		},
		
		"VPNPassword": {
			"NoEcho": "true",
			"Description" : "Password for VPN access",
			"Type": "String",
			"MinLength": "6",
			"MaxLength": "41",
			"AllowedPattern" : "[a-zA-Z0-9]*",
			"ConstraintDescription" : "must contain only alphanumeric characters."
		},
		
		"InstanceType" : {
			"Description" : "VPNServer EC2 instance type",
			"Type" : "String",
			"Default" : "t1.micro",
			"AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
			"ConstraintDescription" : "must be a valid EC2 instance type."
		}
	},
	
	"Mappings" : {
		"AWSInstanceType2Arch" : {
			"t1.micro"    : { "Arch" : "EBS64" },
			"m1.small"    : { "Arch" : "I64" },
			"m1.medium"   : { "Arch" : "I64" },
			"m1.large"    : { "Arch" : "I64" },
			"m1.xlarge"   : { "Arch" : "I64" },
			"m2.xlarge"   : { "Arch" : "I64" },
			"m2.2xlarge"  : { "Arch" : "I64" },
			"m2.4xlarge"  : { "Arch" : "I64" },
			"m3.xlarge"   : { "Arch" : "EBS64" },
			"m3.2xlarge"  : { "Arch" : "EBS64" },
			"c1.medium"   : { "Arch" : "I64" },
			"c1.xlarge"   : { "Arch" : "I64" }
		},
		
		"AWSRegionArch2AMI" : {
			"us-east-1"      : { "EBS32": "ami-7ecf5c17", "EBS64": "ami-54cf5c3d", "I32": "ami-2ccf5c45", "I64": "ami-04cf5c6d" },
			"us-west-2"      : { "EBS32": "ami-6227ad52", "EBS64": "ami-8e27adbe", "I32": "ami-0427ad34", "I64": "ami-7627ad46" },
			"us-west-1"      : { "EBS32": "ami-a63210e3", "EBS64": "ami-b63210f3", "I32": "ami-963210d3", "I64": "ami-a83210ed" },
			"eu-west-1"      : { "EBS32": "ami-5c5f5728", "EBS64": "ami-3c5f5748", "I32": "ami-965e56e2", "I64": "ami-325f5746" },
			"ap-southeast-1" : { "EBS32": "ami-8e7538dc", "EBS64": "ami-ba7538e8", "I32": "ami-b07538e2", "I64": "ami-be7538ec" },
			"ap-southeast-2" : { "EBS32": "ami-2f7dfa2e", "EBS64": "ami-5d7dfa5c", "I32": "ami-437dfa42", "I64": "ami-737dfa72" },
			"ap-northeast-1" : { "EBS32": "ami-bcdf4e86", "EBS64": "ami-b6df4e8c", "I32": "ami-aadf4e90", "I64": "ami-a0df4e9a" },
			"sa-east-1"      : { "EBS32": "ami-93c8138e", "EBS64": "ami-89c81394", "I32": "ami-8fc81392", "I64": "ami-8bc81396" }
		}
	},
	
	"Resources" : {
	
		"CfnUser" : {
			"Type" : "AWS::IAM::User",
			"Properties" : {
				"Path": "/",
				"Policies": [{
					"PolicyName": "root",
					"PolicyDocument": { "Statement":[{
							"Effect":"Allow",
							"Action":"cloudformation:DescribeStackResource",
							"Resource":"*"
					}]}
				}]
			}
		},
  		
		"VPNServer": {  
			"Type": "AWS::EC2::Instance",
			"Metadata" : {
				"AWS::CloudFormation::Init" : {
      				"configSets" : { "default" : [ "ppp", "pptpd" ]  },
          			"ppp" : {
               			"packages" : {
							"yum" : {
								"ppp" : []
							}
						}
             		},
					"pptpd" : {
						"packages" : {
       						"rpm" : {
               					"pptpd" : "http://poptop.sourceforge.net/yum/stable/packages/pptpd-1.3.4-2.el6.x86_64.rpm" 
             				}
						},
      					"files" : {
             				"/etc/ppp/options.pptpd" : {
                   				"content": { "Fn::Join" : ["\n", [
									"name pptpd",
									"refuse-pap",
									"refuse-chap",
									"refuse-mschap",
									"require-mschap-v2",
									"require-mppe-128",
									"ms-dns 8.8.8.8",
									"ms-dns 4.4.4.4",
									"proxyarp",
									"lock",
									"nobsdcomp ",
									"novj",
									"novjccomp",
									"nologfd"
                         		]]},
                           		"mode": "000644",
                           		"owner": "root",
                                "group": "root"
                		 	},
                    		"/etc/ppp/chap-secrets" : {
                        		"content" : { "Fn::Join" : [" ", [
                            		{ "Ref" : "VPNUsername" },
                              		"pptpd",
                                	{ "Ref" : "VPNPassword" }, 
                                 	"*\n" 
                         		]]},
                          		"mode": "000600",
                          		"owner": "root",
                                "group": "root"
                          	},
                           	"/etc/pptpd.conf" : {
                              	"content" : { "Fn::Join" : ["\n", [
                                	"option /etc/ppp/options.pptpd",
                                 	"logwtmp",
                                  	"localip 192.168.1.1",
									"remoteip 192.168.1.101-200",
         							""
                                ]]},
                          		"mode": "000644",
                          		"owner": "root",
                                "group": "root"
                            }
           				}
					}
				}
			},
			"Properties": {
				"ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
							{ "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
				"InstanceType"   : { "Ref" : "InstanceType" },
				"SecurityGroups" : [ {"Ref" : "VPNSecurityGroup"} ],
				"KeyName"        : { "Ref" : "KeyName" },
				"UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash -v\n",
					"yum update -y aws-cfn-bootstrap\n",
					
					"# Helper function\n",
					"function error_exit\n",
					"{\n",
					"  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "WaitHandle" }, "'\n",
					"  exit 1\n",
					"}\n",
					
					"# Install packages\n",
					"/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r VPNServer ",
					"    --region ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",
     
     				"# Enable ipfowarding\n", 
     				"sed -i 's/net.ipv4.ip_forward = 0/net.ipv4.ip_forward = 1/' /etc/sysctl.conf\n",
         			"sysctl -e -p\n", 
     
     				"# Configure the firewall\n", 
     				"iptables -A INPUT -i eth0 -p tcp --dport 1723 -j ACCEPT\n",
					"iptables -A INPUT -i eth0 -p gre -j ACCEPT\n",
					"iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n",
					"iptables -A FORWARD -i ppp+ -o eth0 -j ACCEPT\n",
					"iptables -A FORWARD -i eth0 -o ppp+ -j ACCEPT\n",
					"service iptables save\n",
					"service iptables restart\n",
     				
     				"# Start VPN\n",
     				"service pptpd start\n",
					
					"# All is well so signal success\n",
					"/opt/aws/bin/cfn-signal -e 0 -r \"Application Stack setup complete\" '", { "Ref" : "WaitHandle" }, "'\n"
				]]}}        
			}
	},
	"WaitHandle" : {
		"Type" : "AWS::CloudFormation::WaitConditionHandle"
	},
	
	"WaitCondition" : {
		"Type" : "AWS::CloudFormation::WaitCondition",
		"DependsOn" : "VPNServer",
		"Properties" : {
			"Handle" : {"Ref" : "WaitHandle"},
			"Timeout" : "300"
		}
	},
	
	"VPNSecurityGroup" : {
		"Type" : "AWS::EC2::SecurityGroup",
		"Properties" : {
			"GroupDescription" : "Enable VPN access",
				"SecurityGroupIngress" : [
      				{"IpProtocol" : "tcp", "FromPort" : "47", "ToPort" : "47", "CidrIp" : "0.0.0.0/0"},
					{"IpProtocol" : "tcp", "FromPort" : "1723", "ToPort" : "1723", "CidrIp" : "0.0.0.0/0"},
					{"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
				]
			}
		}          
	},
	
	"Outputs" : {
		"VPN" : {
			"Value" : { "Fn::GetAtt" : [ "VPNServer", "PublicDnsName" ]},
			"Description" : "URL for newly created VPN"
		}
	}
}